filter f_f5_bigip_msg {
    match('(LSN_ADD|LSN_DELETE|LSN_INBOUND_ADD|LSN_INBOUND_DELETE).*$' value("MESSAGE"));
};
 
destination d_kafka_f5_bigip {
    channel {
        rewrite {
            set("${HOST}"    value(".eventv1.host"));
            set("1"          value(".eventv1.version"));
            set("${ISODATE}" value(".eventv1.timestamp") condition("${.eventv1.timestamp}" eq ""));
            set("${MESSAGE}" value(".eventv1.message")    condition("${.eventv1.message}" eq ""));
            set("${MSG}"     value(".eventv1.message")    condition("${.eventv1.message}" eq ""));
            set("${SOURCEIP}"     value(".eventv1.ip")    condition("${.eventv1.ip}" eq ""));
            set("generic"    value(".eventv1.type")       condition("${.eventv1.type}" eq ""));
        };

        destination {
            kafka-c(config(queue.buffering.max.ms("500"))
                topic("cgnat.syslog.f5_bigip")
                bootstrap-servers("kafka:9092")
                message("$(format-json --key .eventv1.* --rekey .eventv1.* --shift 9)")
            );
        };
    };
};
 
log {
    source(s_net);
    filter(f_f5_bigip_msg);
    destination(d_kafka_f5_bigip);
};